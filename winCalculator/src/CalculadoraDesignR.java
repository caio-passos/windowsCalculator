/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.lang.*;
import java.lang.Math;
/**
 *
 * @author Alessandra Raissa; Caio Passos; Cláudio Ribeiro;
 */
public class CalculadoraDesignR extends javax.swing.JFrame {
    
    boolean vir=false; //verifica vírgula
    boolean opera=true, porc = false; //verifíca tipo variável/verifica porcentagem
    double n1=0, n2=0, temp=0, def=0; //def -> var definitiva 
    int num1=0, num2=0, op; //varíaveis inteiro. Evita conflito na passagem de tipo
    String joker;
    /**
     * Creates new form CalculadoraDesignR
     */
    public CalculadoraDesignR() {
        initComponents();
    }
   
    public void calcula(){ //método operações
        if(!porc){
            if(vir){
                if(n1 == 0){
                    n1 = num1;
                    num1 = 0;
                }
                n2 = Double.parseDouble(visor.getText());
                opera = false;
            }else{
                if(!opera){
                    n2 = Double.parseDouble(visor.getText());
                }
                num2 = Integer.parseInt(visor.getText());
            }
        }
        if (opera) { //calcula Integer
            switch(op){
                case 1: //soma
                    visor.setText(Integer.toString(num1+num2)); //permite soma como Int e resultado em String
                    num1 = num1+num2; //acumula soma
                    break;
                case 2: //multiplicação
                    visor.setText(Integer.toString(num1*num2));
                    num1 = num1*num2;
                    break;
                case 3: //subtração
                    visor.setText(Integer.toString(num1-num2));
                    num1 = num1-num2;
                    break;
                case 4: //divisão
                    visor.setText(Integer.toString(num1/num2));
                    num1 = num1/num2;
                    break;
                case 5:
                    visor.setText(Integer.toString((int) Math.sqrt(num1)));
                    //n1 = Math.sqrt(n1);
                    break;
                case 6:
                    visor.setText(Double.toString(num1/100));
                    //n1 = n1/100;
                    break;
            }
        } else { //calcula Double
            switch(op){
                case 1:
                    visor.setText(Double.toString(n1+n2));
                    //n1 = n1+n2;
                    break;
                case 2:
                    visor.setText(Double.toString(n1*n2));
                    //n1 = n1*n2;
                    break;
                case 3:
                    visor.setText(Double.toString(n1-n2));
                    //n1 = n1-n2;
                    break;
                case 4:
                    visor.setText(Double.toString(n1/n2));
                    //n1 = n1/n2;
                    break;
                case 5:
                    visor.setText(Double.toString(Math.sqrt(n1)));
                    //n1 = Math.sqrt(n1);
                    break;
                case 6:
                    visor.setText(Double.toString(n1/100));
                    //n1 = n1/100;
                    break;
            }
            vir = true; //informa vírgula presente
        } 
    }

     public void converte1(){
        if (vir){ //define tipo primeiro número
            n1 = Double.parseDouble(visor.getText());
            opera = false;
        } else { num1 = Integer.parseInt(visor.getText());}
        visor.setText("");
        vir = false; //permite virgula novamente
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        visor = new javax.swing.JTextField();
        Del = new javax.swing.JButton();
        Div = new javax.swing.JButton();
        Porcent = new javax.swing.JButton();
        Raiz = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        Multi = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        Soma = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        Sub = new javax.swing.JButton();
        b0 = new javax.swing.JButton();
        virgula = new javax.swing.JButton();
        Equals = new javax.swing.JButton();
        LimpMe = new javax.swing.JButton();
        acumulado = new javax.swing.JButton();
        sumEntra = new javax.swing.JButton();
        subEntra = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        visor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visorActionPerformed(evt);
            }
        });

        Del.setText("C");
        Del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelActionPerformed(evt);
            }
        });

        Div.setText("/");
        Div.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivActionPerformed(evt);
            }
        });

        Porcent.setText("%");
        Porcent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PorcentActionPerformed(evt);
            }
        });

        Raiz.setText("√");
        Raiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RaizActionPerformed(evt);
            }
        });

        b7.setText("7");
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b8.setText("8");
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b9.setText("9");
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        Multi.setText("X");
        Multi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiActionPerformed(evt);
            }
        });

        b4.setText("4");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b5.setText("5");
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b6.setText("6");
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        Soma.setText("+");
        Soma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SomaActionPerformed(evt);
            }
        });

        b1.setText("1");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setText("2");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setText("3");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        Sub.setText("-");
        Sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubActionPerformed(evt);
            }
        });

        b0.setText("0");
        b0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b0ActionPerformed(evt);
            }
        });

        virgula.setText(".");
        virgula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                virgulaActionPerformed(evt);
            }
        });

        Equals.setText("=");
        Equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EqualsActionPerformed(evt);
            }
        });

        LimpMe.setText("MC");
        LimpMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpMeActionPerformed(evt);
            }
        });

        acumulado.setText("MR");
        acumulado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acumuladoActionPerformed(evt);
            }
        });

        sumEntra.setText("M+");
        sumEntra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumEntraActionPerformed(evt);
            }
        });

        subEntra.setText("M-");
        subEntra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subEntraActionPerformed(evt);
            }
        });

        jButton5.setText("MS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Del, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Div, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Porcent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Raiz, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(Multi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(b4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Soma))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b0, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(virgula, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Equals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Sub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(visor, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LimpMe, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acumulado, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sumEntra, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subEntra, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Multi, Raiz, Soma, Sub, b1, b2, b3, b4, b5, b6, b7, b8, b9});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(visor, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(acumulado)
                        .addComponent(sumEntra)
                        .addComponent(subEntra)
                        .addComponent(jButton5))
                    .addComponent(LimpMe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Del, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(Div, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Porcent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Raiz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b7)
                    .addComponent(b8)
                    .addComponent(b9)
                    .addComponent(Multi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b4)
                    .addComponent(b5)
                    .addComponent(b6)
                    .addComponent(Soma))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b1)
                    .addComponent(b2)
                    .addComponent(b3)
                    .addComponent(Sub))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b0)
                    .addComponent(virgula)
                    .addComponent(Equals))
                .addGap(14, 14, 14))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Del, Div, Equals, Multi, Porcent, Raiz, Soma, Sub, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, virgula});

        pack();
    }// </editor-fold>                        

    private void DelActionPerformed(java.awt.event.ActionEvent evt) {                                    
        if (visor.getText().substring(visor.getText().length()-1).equals(",")){
            vir=false;
        } visor.setText(visor.getText().substring(0,visor.getText().length()-1));
    }                                   

    private void visorActionPerformed(java.awt.event.ActionEvent evt) {                                      
    }                                     

    private void b0ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        visor.setText(visor.getText()+"0");
    }                                  

    private void MultiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiActionPerformed
        op = 2;
        converte1();
    }//GEN-LAST:event_MultiActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        visor.setText(visor.getText()+"1");
    }                                  

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        visor.setText(visor.getText()+"2");
    }                                  

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        visor.setText(visor.getText()+"3");
    }                                  

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        visor.setText(visor.getText()+"4");
    }                                  

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        visor.setText(visor.getText()+"5");
    }                                  

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        visor.setText(visor.getText()+"6");
    }                                  

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        visor.setText(visor.getText()+"7");
    }                                  

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        visor.setText(visor.getText()+"8");
    }                                  

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        visor.setText(visor.getText()+"9");
    }                                  

    private void virgulaActionPerformed(java.awt.event.ActionEvent evt) {                                        
        if (vir == false){
            visor.setText(visor.getText()+".");
            vir = true;
            opera = false;
        }
    }                                       

    private void SomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SomaActionPerformed
        op = 1;
        converte1(); //chama converte
    }//GEN-LAST:event_SomaActionPerformed

    private void EqualsActionPerformed(java.awt.event.ActionEvent evt) {                                       
        calcula();
    }                                      

    private void SubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubActionPerformed
        op = 3;
        converte1();
    }//GEN-LAST:event_SubActionPerformed

    private void RaizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RaizActionPerformed
        op = 5;
        converte1();
    }//GEN-LAST:event_RaizActionPerformed

    private void PorcentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PorcentActionPerformed
        porc = true;
        op = 6;
        converte1();
    }//GEN-LAST:event_PorcentActionPerformed

    private void DivActionPerformed(java.awt.event.ActionEvent evt) {                                    
        op = 4;
        converte1();
    }                                   

    private void acumuladoActionPerformed(java.awt.event.ActionEvent evt) { //MR                                     
        if (vir) {
            visor.setText(String.valueOf(def));
        }
        else {
            visor.setText(Integer.toString((int)def));
        }
    }

    private void LimpMeActionPerformed(java.awt.event.ActionEvent evt) { //MC - Limpa                                   
        temp = 0;
    }                                      

    private void sumEntraActionPerformed(java.awt.event.ActionEvent evt) {  //M+                                       
        temp += Double.parseDouble(visor.getText());
        if (vir){
            visor.setText(Double.toString(temp));
        } else {
            visor.setText(Integer.toString((int)temp));
        }
    }                                        

    private void subEntraActionPerformed(java.awt.event.ActionEvent evt) { //M-                                     
        //temp -= Double.parseDouble(visor.getText());
        temp=Double.parseDouble(visor.getText());
        temp = temp-def; 
        if (vir){
            visor.setText(Double.toString(temp));
        } else {
            visor.setText(Integer.toString((int)temp));
        }
    }                                        

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {  //MS - Guarda
        if (vir){
            temp = num1;
            def = num1;
        } else { 
            temp = n1;
            def = n1;
        }
        joker = visor.getText();
        temp = Double.parseDouble(joker);
        def = Double.parseDouble(joker);
        if (vir){
            visor.setText(Double.toString(def));
        } else { visor.setText(Integer.toString((int) def));}
        
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculadoraDesignR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculadoraDesignR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculadoraDesignR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculadoraDesignR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculadoraDesignR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Del;
    private javax.swing.JButton Div;
    private javax.swing.JButton Equals;
    private javax.swing.JButton LimpMe;
    private javax.swing.JButton Multi;
    private javax.swing.JButton Porcent;
    private javax.swing.JButton Raiz;
    private javax.swing.JButton Soma;
    private javax.swing.JButton Sub;
    private javax.swing.JButton acumulado;
    private javax.swing.JButton b0;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton subEntra;
    private javax.swing.JButton sumEntra;
    private javax.swing.JButton virgula;
    private javax.swing.JTextField visor;
    // End of variables declaration                   
}